name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  backend-python:
    name: Backend (pytest)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/adjudicator
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          pip install pytest-cov

      - name: Run linting
        run: |
          # Run code quality checks
          black --check .
          isort --check-only .
          flake8 .

      - name: Run tests with coverage
        env:
          PYTHONUNBUFFERED: "1"
        run: |
          pytest --cov=truce_adjudicator --cov-report=term-missing --cov-report=xml --cov-fail-under=70

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        if: always()
        with:
          file: ./apps/adjudicator/coverage.xml
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false

  frontend-web:
    name: Frontend (build + tests)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/web
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            apps/web/package-lock.json

      - name: Install
        run: |
          if [ -f package.json ]; then npm ci; fi

      - name: Run linting
        run: |
          npm run lint

      - name: Run tests with coverage
        run: |
          npm run test:ci

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        if: always()
        with:
          file: ./apps/web/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
          fail_ci_if_error: false

      - name: Build
        run: |
          npm run build
